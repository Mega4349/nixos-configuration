# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.supportedFilesystems = [ "ntfs" ];

  fileSystems."/" =
    { device = "none";
      fsType = "tmpfs";
      options = [ "defaults" "size=5G" "mode=755" ];
    };

  fileSystems."/home/mega" = {
    device = "none";
    fsType = "tmpfs";
    options = [ "size=5G" "mode=777" ];
  };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/CC2C-9EF2";
      fsType = "vfat";
    };

  fileSystems."/nix" =
    { device = "/dev/mapper/main";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" ];
      neededForBoot = true;
    };

  boot.initrd.luks.devices."main".device = "/dev/disk/by-uuid/c13530c1-43c9-4556-bcd0-c52a8e85d14a";

  fileSystems."/nix/persist" =
    { device = "/dev/mapper/main";
      fsType = "btrfs";
      options = [ "subvol=persist" "compress=zstd" ];
      neededForBoot = true;
    };

  fileSystems."/nix/persist/home" =
    { device = "/dev/mapper/main";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" ];
      neededForBoot = true;
    };

    fileSystems."/home/mega/.steamlibrary" = {
      device = "/dev/mapper/main";
      fsType = "btrfs";
      options = [ "subvol=steam" "compress=zstd" ];
    };

  #fileSystems."/var/log" =
  #  { device = "/nix/persist/var/log";
  #    fsType = "none";
  #    options = [ "bind" ];
  #  };

  environment.etc."machine-id".source = "/nix/persist/etc/machine-id";

  fileSystems."/home/mega/nixos-configuration" =
    { device = "/nix/persist/etc/nixos";
      fsType = "none";
      options = [ "bind" ];
    };

  zramSwap = {
    enable = true;
    algorithm = "zstd";
    priority = 100;
    memoryPercent = 50;
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;
  services.fstrim.enable = lib.mkDefault true;
  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware = {
    cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    opengl = {
      extraPackages = with pkgs; [
        intel-media-driver
        vaapiIntel
        vaapiVdpau
        libvdpau-va-gl
      ];
      extraPackages32 = with pkgs.pkgsi686Linux; [ vaapiIntel ];
    };
  };
}
